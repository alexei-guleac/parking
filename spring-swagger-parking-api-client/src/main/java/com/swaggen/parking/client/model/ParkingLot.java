/*
 * Parking application Backend API
 * Parking IoT application project API reference for developers
 *
 * OpenAPI spec version: 0.2
 * Contact: parking_app_service@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.swaggen.parking.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import javax.annotation.processing.Generated;
import java.util.Objects;


/**
 * Parking lot model
 */
@Schema(description = "Parking lot model")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-06T11:26:27.336+03:00[EET]")
public class ParkingLot {
    @JsonProperty("id")
    private Long id = null;

    @JsonProperty("number")
    private Integer number = null;

    @JsonProperty("status")
    private StatusEnum status = null;

    @JsonProperty("updatedAt")
    private OffsetDateTime updatedAt = null;

    public ParkingLot id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Parking lot unique id (two numbers comes from Arduino scalable infrastructure - master board id + slave board id)
     *
     * @return id
     **/
    @Schema(description = "Parking lot unique id (two numbers comes from Arduino scalable infrastructure - master board id + slave board id)")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public ParkingLot number(Integer number) {
        this.number = number;
        return this;
    }

    /**
     * Parking lot number
     *
     * @return number
     **/
    @Schema(description = "Parking lot number")
    public Integer getNumber() {
        return number;
    }

    public void setNumber(Integer number) {
        this.number = number;
    }

    public ParkingLot status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Parking lot status (free, occupied, unknown, reserved)
     *
     * @return status
     **/
    @Schema(description = "Parking lot status (free, occupied, unknown, reserved)")
    public StatusEnum getStatus() {
        return status;
    }

    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    public ParkingLot updatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Parking lot updated at date
     *
     * @return updatedAt
     **/
    @Schema(description = "Parking lot updated at date")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ParkingLot parkingLot = (ParkingLot) o;
        return Objects.equals(this.id, parkingLot.id) &&
                Objects.equals(this.number, parkingLot.number) &&
                Objects.equals(this.status, parkingLot.status) &&
                Objects.equals(this.updatedAt, parkingLot.updatedAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, number, status, updatedAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ParkingLot {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    number: ").append(toIndentedString(number)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Parking lot status (free, occupied, unknown, reserved)
     */
    public enum StatusEnum {
        FREE("FREE"),
        OCCUPIED("OCCUPIED"),
        RESERVED("RESERVED"),
        UNKNOWN("UNKNOWN");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static StatusEnum fromValue(String text) {
            for (StatusEnum b : StatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
