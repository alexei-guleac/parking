/*
 * Parking application Backend API
 * Parking IoT application project API reference for developers
 *
 * OpenAPI spec version: 0.2
 * Contact: parking_app_service@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.swaggen.parking.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.swaggen.parking.client.model.User;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;


/**
 * Social provider profile connect request. 
 */
@Schema(description = "Social provider profile connect request. ")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-06T11:26:27.336+03:00[EET]")
public class SocialConnectRequest {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("socialProvider")
  private String socialProvider = null;

  @JsonProperty("user")
  private User user = null;

  @JsonProperty("username")
  private String username = null;

  public SocialConnectRequest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Social provider user ID
   * @return id
  **/
  @Schema(required = true, description = "Social provider user ID")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SocialConnectRequest socialProvider(String socialProvider) {
    this.socialProvider = socialProvider;
    return this;
  }

   /**
   * Social provider short name
   * @return socialProvider
  **/
  @Schema(required = true, description = "Social provider short name")
  public String getSocialProvider() {
    return socialProvider;
  }

  public void setSocialProvider(String socialProvider) {
    this.socialProvider = socialProvider;
  }

  public SocialConnectRequest user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(required = true, description = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }

  public SocialConnectRequest username(String username) {
    this.username = username;
    return this;
  }

   /**
   * User username
   * @return username
  **/
  @Schema(required = true, description = "User username")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SocialConnectRequest socialConnectRequest = (SocialConnectRequest) o;
    return Objects.equals(this.id, socialConnectRequest.id) &&
        Objects.equals(this.socialProvider, socialConnectRequest.socialProvider) &&
        Objects.equals(this.user, socialConnectRequest.user) &&
        Objects.equals(this.username, socialConnectRequest.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, socialProvider, user, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SocialConnectRequest {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    socialProvider: ").append(toIndentedString(socialProvider)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
