/*
 * Parking application Backend API
 * Parking IoT application project API reference for developers
 *
 * OpenAPI spec version: 0.2
 * Contact: parking_app_service@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.swaggen.parking.client.api;

import com.swaggen.parking.client.model.AuthenticationRequest;
import com.swaggen.parking.client.model.ResponseEntity;
import com.swaggen.parking.client.model.SocialAuthRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationControllerApi
 */
@Ignore
public class AuthenticationControllerApiTest {

    private final AuthenticationControllerApi api = new AuthenticationControllerApi();

    /**
     * User authentication in system
     *
     * Handles user authentication request from client web application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void authenticationUsingPOSTTest() {
        AuthenticationRequest body = null;
        Object headers = null;
        ResponseEntity response = api.authenticationUsingPOST(body, headers);

        // TODO: test validations
    }
    /**
     * User authentication in system by social provider id
     *
     * Handles social user authentication request from client web application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void socialLoginUsingPOSTTest() {
        SocialAuthRequest body = null;
        Object headers = null;
        ResponseEntity response = api.socialLoginUsingPOST(body, headers);

        // TODO: test validations
    }
}
