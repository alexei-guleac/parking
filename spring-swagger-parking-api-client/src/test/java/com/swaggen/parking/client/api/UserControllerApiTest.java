/*
 * Parking application Backend API
 * Parking IoT application project API reference for developers
 *
 * OpenAPI spec version: 0.2
 * Contact: parking_app_service@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.swaggen.parking.client.api;

import com.swaggen.parking.client.model.ResponseEntity;
import com.swaggen.parking.client.model.SocialUser;
import com.swaggen.parking.client.model.UpdateUserRequest;
import com.swaggen.parking.client.model.UserLdap;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserControllerApi
 */
@Ignore
public class UserControllerApiTest {

    private final UserControllerApi api = new UserControllerApi();

    /**
     * Delete user
     *
     * Endpoint to delete user profile from database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserUsingPOSTTest() {
        Object headers = null;
        ResponseEntity response = api.deleteUserUsingPOST(headers);

        // TODO: test validations
    }
    /**
     * View a list of available employees
     *
     * Endpoint to retrieve all users from database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllUsersUsingGETTest() {
        UserLdap response = api.getAllUsersUsingGET();

        // TODO: test validations
    }
    /**
     * Get an employee by username
     *
     * Endpoint to retrieve user profile from database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserByUsernameUsingPOSTTest() {
        SocialUser response = api.getUserByUsernameUsingPOST();

        // TODO: test validations
    }
    /**
     * Update user
     *
     * Endpoint to update user profile in database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserUsingPOSTTest() {
        UpdateUserRequest body = null;
        Object headers = null;
        ResponseEntity response = api.updateUserUsingPOST(body, headers);

        // TODO: test validations
    }
}
