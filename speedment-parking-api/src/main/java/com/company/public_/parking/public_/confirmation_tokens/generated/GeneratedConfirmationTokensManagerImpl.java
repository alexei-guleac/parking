package com.company.public_.parking.public_.confirmation_tokens.generated;

import com.company.public_.parking.public_.confirmation_tokens.ConfirmationTokens;
import com.company.public_.parking.public_.confirmation_tokens.ConfirmationTokensImpl;
import com.company.public_.parking.public_.confirmation_tokens.ConfirmationTokensManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.public_.parking.public_.confirmation_tokens.ConfirmationTokens}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedConfirmationTokensManagerImpl 
extends AbstractManager<ConfirmationTokens> 
implements GeneratedConfirmationTokensManager {
    
    private final TableIdentifier<ConfirmationTokens> tableIdentifier;
    
    protected GeneratedConfirmationTokensManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("parking", "public", "confirmation_tokens");
    }
    
    @Override
    public ConfirmationTokens create() {
        return new ConfirmationTokensImpl();
    }
    
    @Override
    public TableIdentifier<ConfirmationTokens> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<ConfirmationTokens>> fields() {
        return ConfirmationTokensManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<ConfirmationTokens>> primaryKeyFields() {
        return Stream.of(
            ConfirmationTokens.TOKEN_ID
        );
    }
}