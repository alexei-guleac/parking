package com.company.public_.parking.public_.parking_lots.generated;

import com.company.public_.parking.public_.parking_lots.ParkingLots;
import com.company.public_.parking.public_.parking_lots.ParkingLotsImpl;
import com.company.public_.parking.public_.parking_lots.ParkingLotsManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.public_.parking.public_.parking_lots.ParkingLots} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedParkingLotsManagerImpl 
extends AbstractManager<ParkingLots> 
implements GeneratedParkingLotsManager {
    
    private final TableIdentifier<ParkingLots> tableIdentifier;
    
    protected GeneratedParkingLotsManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("parking", "public", "parking_lots");
    }
    
    @Override
    public ParkingLots create() {
        return new ParkingLotsImpl();
    }
    
    @Override
    public TableIdentifier<ParkingLots> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<ParkingLots>> fields() {
        return ParkingLotsManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<ParkingLots>> primaryKeyFields() {
        return Stream.of(
            ParkingLots.ID
        );
    }
}